o=90 p=180 q=360 u=40 v=50 h=0.5 GOTO3
:tPit=tp+q*(tp<-p)-q*(tp>p) :tHdg=th+q*(th<-p)-q*(th>p)
ap=:Pit ah=:Hdg ar=:Rol np=:nPit nh=:nHdg i=np/p i+=h-2*(i>h) s=:sy%4
np-=ap nh=(nh-ah)*4*i*(1-ABS i) i=ar/p sr=4*i*(1-ABS i) i+=.5-2*(i>.5)
cr=4*i*(1-ABS i) tp=np*cr+nh*sr th=-np*sr+nh*cr x=:sy%4 GOTO2+3*(x==s)
s=:sy err+=2*(err<9)*(:sy>"9") GOTO6-(err--<1) // euler_relative.yolol
                                               // by StandPeter
                                               // for NavGrid v1.0
                      // https://github.com/pcbennion/starbase-navgrid











// ------------------ This line is 70 chars long ------------------- >

// euler_relative.yolol
//     by StandPeter

// ------------------ This line is 70 chars long ------------------- >

// ADVANCED CHIP REQUIRED

// Subtracts absolute attitude from navpoint alignment, and rotates
// the result by your current roll to determine the relative pitch and
// heading to your navpoint target.